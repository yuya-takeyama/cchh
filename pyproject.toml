[project]
name = "claude_code_hook_handlers"
version = "0.1.0"
description = "Hook handler for Claude CLI"
requires-python = ">=3.13"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.8.0",
    "taskipy>=1.13.0",
    "mypy>=1.11.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["hook_handler/tests"]
pythonpath = ["."]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=hook_handler --cov-report=term-missing"

[tool.coverage.run]
branch = true
source = ["hook_handler"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
ignore_missing_imports = true

[tool.hatch.build.targets.wheel]
packages = ["hook_handler"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.8.0",
    "taskipy>=1.13.0",
    "mypy>=1.11.0",
]

[tool.taskipy.tasks]
test = "pytest"
lint = "ruff check ."
format = "ruff format ."
typecheck = "mypy hook_handler"
all = "task lint && task test && task typecheck"
dev = "uv sync"
clean = """
rm -rf .venv/ __pycache__/ hook_handler/__pycache__/ \
hook_handler/tests/__pycache__/ .coverage .pytest_cache/ .ruff_cache/ && \
find . -type f -name '*.pyc' -delete && \
find . -type d -name '__pycache__' -delete
"""
